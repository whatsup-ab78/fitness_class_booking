{"ast":null,"code":"var _jsxFileName = \"D:\\\\fitness_management_aiStudio\\\\frontend\\\\fitness\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Login.js\n\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [showPassword, setShowPassword] = useState(false); // State to toggle password visibility\n  const navigate = useNavigate();\n  const {\n    login\n  } = useAuth();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(''); // Clear previous errors\n    try {\n      const response = await axios.post('/api/users/login', {\n        email,\n        password\n      });\n      login(response.data); // Update auth context with user data and token\n\n      // Redirect based on the user's role\n      if (response.data.user.role === 'admin') {\n        navigate('/admin');\n      } else {\n        navigate('/dashboard');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Invalid credentials. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-center mb-4\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                value: email,\n                onChange: e => setEmail(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: showPassword ? 'text' : 'password' // Dynamically change input type\n                ,\n                className: \"form-control\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3 form-check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: \"showPasswordCheck\",\n                checked: showPassword,\n                onChange: () => setShowPassword(!showPassword) // Toggle state on change\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: \"showPasswordCheck\",\n                children: \"Show Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary w-100\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/register\",\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"Ba1pOJsRC+z3QBRGId+O5udhbnE=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Link","axios","useAuth","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","showPassword","setShowPassword","navigate","login","handleSubmit","e","preventDefault","response","post","data","user","role","err","_err$response","_err$response$data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","id","checked","htmlFor","to","_c","$RefreshReg$"],"sources":["D:/fitness_management_aiStudio/frontend/fitness/src/components/Login.js"],"sourcesContent":["// frontend/src/components/Login.js\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false); // State to toggle password visibility\r\n    const navigate = useNavigate();\r\n    const { login } = useAuth();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(''); // Clear previous errors\r\n        try {\r\n            const response = await axios.post('/api/users/login', { email, password });\r\n            login(response.data); // Update auth context with user data and token\r\n            \r\n            // Redirect based on the user's role\r\n            if (response.data.user.role === 'admin') {\r\n                navigate('/admin');\r\n            } else {\r\n                navigate('/dashboard');\r\n            }\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || 'Invalid credentials. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-6\">\r\n                <div className=\"card p-4\">\r\n                    <div className=\"card-body\">\r\n                        <h2 className=\"text-center mb-4\">Login</h2>\r\n                        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Email address</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Password</label>\r\n                                <input\r\n                                    type={showPassword ? 'text' : 'password'} // Dynamically change input type\r\n                                    className=\"form-control\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            \r\n                            <div className=\"mb-3 form-check\">\r\n                                <input \r\n                                    type=\"checkbox\" \r\n                                    className=\"form-check-input\" \r\n                                    id=\"showPasswordCheck\"\r\n                                    checked={showPassword}\r\n                                    onChange={() => setShowPassword(!showPassword)} // Toggle state on change\r\n                                />\r\n                                <label className=\"form-check-label\" htmlFor=\"showPasswordCheck\">Show Password</label>\r\n                            </div>\r\n                            \r\n                            <button type=\"submit\" className=\"btn btn-primary w-100\">Login</button>\r\n                        </form>\r\n                        <div className=\"text-center mt-3\">\r\n                            <p>Don't have an account? <Link to=\"/register\">Sign Up</Link></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}