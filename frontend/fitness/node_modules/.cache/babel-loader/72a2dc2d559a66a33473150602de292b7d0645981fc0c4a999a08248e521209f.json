{"ast":null,"code":"var _jsxFileName = \"D:\\\\fitness_management_aiStudio\\\\frontend\\\\fitness\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles\n}) => {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth(); // Get the new loading state\n\n  // Wait until the initial authentication check is complete\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this); // Or a spinner component\n  }\n\n  // After loading, if there's no user, redirect to login\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n\n  // If roles are specified and the user's role is not included, redirect\n  if (allowedRoles && !allowedRoles.includes(user.role)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this); // Redirect to home for unauthorized roles\n  }\n  return children;\n};\n_s(ProtectedRoute, \"EmJkapf7qiLC5Br5eCoEq4veZes=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","_s","user","loading","fileName","_jsxFileName","lineNumber","columnNumber","to","includes","role","_c","$RefreshReg$"],"sources":["D:/fitness_management_aiStudio/frontend/fitness/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst ProtectedRoute = ({ children, allowedRoles }) => {\r\n    const { user, loading } = useAuth(); // Get the new loading state\r\n\r\n    // Wait until the initial authentication check is complete\r\n    if (loading) {\r\n        return <div>Loading...</div>; // Or a spinner component\r\n    }\r\n\r\n    // After loading, if there's no user, redirect to login\r\n    if (!user) {\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    // If roles are specified and the user's role is not included, redirect\r\n    if (allowedRoles && !allowedRoles.includes(user.role)) {\r\n        return <Navigate to=\"/\" />; // Redirect to home for unauthorized roles\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGR,OAAO,CAAC,CAAC,CAAC,CAAC;;EAErC;EACA,IAAIQ,OAAO,EAAE;IACT,oBAAON,OAAA;MAAAE,QAAA,EAAK;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAClC;;EAEA;EACA,IAAI,CAACL,IAAI,EAAE;IACP,oBAAOL,OAAA,CAACH,QAAQ;MAACc,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;;EAEA;EACA,IAAIP,YAAY,IAAI,CAACA,YAAY,CAACS,QAAQ,CAACP,IAAI,CAACQ,IAAI,CAAC,EAAE;IACnD,oBAAOb,OAAA,CAACH,QAAQ;MAACc,EAAE,EAAC;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAC;EAChC;EAEA,OAAOR,QAAQ;AACnB,CAAC;AAACE,EAAA,CAnBIH,cAAc;EAAA,QACUH,OAAO;AAAA;AAAAgB,EAAA,GAD/Bb,cAAc;AAqBpB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}